A			-> <algoritmo> <str> LISTADECLAR <inicio> CODIGO <fimalgoritmo>

LISTADECLAR	-> UNIDECLAR LISTADECLAR
LISTADECLAR	-> MULTIDECLAR LISTADECLAR
LISTADECLAR	-> /e/

UNIDECLAR	-> <var> <id> <del|:> TIPO

MULTIDECLAR	-> IDLIST <del|:> TIPO

TIPO		-> <inteiro>
TIPO		-> <logico>

IDLIST		-> <id> IDLIST
IDLIST		-> <del|,> <id> IDLIST
IDLIST		-> /e/

CODIGO      -> COMANDO CODIGO
CODIGO      -> /e/

COMANDO     -> <id> <op|<-> EXPRESSAO
COMANDO     -> <leia> <del|(> IDLIST <del|)>
COMANDO     -> <escreva> <del|(> STROUT <del|)>
COMANDO     -> <se> EXPRESSAOLOGICA <entao> CODIGO <senao> CODIGO <fimse>
COMANDO     -> <para> <id> <de> <num> <ate> <num> PASSO <faca> CODIGO <fimpara>
COMANDO     -> <enquanto> EXPRESSAOLOGICA <faca> CODIGO <fimenquanto>

PASSO       -> <passo> <num>
PASSO       -> /e/

EXPRESSAO   -> DATA OPERANDO

OPERANDO   -> OP DATA
OPERANDO   -> /e/

STROUT      -> PRINTABLE STROUT
STROUT      -> <del|,> PRINTABLE STROUT
STROUT      -> /e/

PRINTABLE   -> <id>
PRINTABLE   -> <str>

EXPRESSAOLOGICA -> DATA EXPRESSAOLOGICA
EXPRESSAOLOGICA -> LOGICOP DATA EXPRESSAOLOGICA
EXPRESSAOLOGICA -> /e/

DATA        -> <num>
DATA        -> <str>
DATA        -> <verdadeiro>
DATA        -> <falso>
DATA        -> <id>

LOGICOP     -> <lop|>>
LOGICOP     -> <lop|>=>
LOGICOP     -> <lop|<>
LOGICOP     -> <lop|<=>
LOGICOP     -> <lop|=>
LOGICOP     -> <lop|<>>
LOGICOP     -> <lop|e>
LOGICOP     -> <lop|ou>

OP          -> <op|+>
OP          -> <op|->
OP          -> <op|*>
OP          -> <op|/>
OP          -> <op|mod>
OP          -> <op|exp>
OP          -> LOGICOP



KEYWORDS
    <var>
    <inteiro>
    <logico>
    <leia>
    <escreva>
    <escreval>
    <se>
    <entao>
    <senao>
    <fimse>
    <para>
    <de>
    <ate>
    <fimpara>
    <enquanto>
    <faca>
    <passo>
    <fimenquanto>
    <algoritmo>
    <inicio>
    <fimalgoritmo>

OP
    <OP | + >			-> <op|+>
    <OP | - >			-> <op|->
    <OP | * >			-> <op|*>
    <OP | / >			-> <op|/>
    <OP | mod >			-> <op|mod>
    <OP | exp >			-> <op|exp>
    <OP | <- >			-> <op|<->

BOOLEAN_DATA
    <VERDADEIRO>		-> <verdadeiro>
    <FALSO>				-> <falso>

NUMBER
	<NUM | %d>			-> <num>

TEXT
	<STR | %s>			-> <str>

DEL
	<DEL | , >			-> <del|,>
	<DEL | : >			-> <del|:>
	<DEL | ( >			-> <del|(>
	<DEL | ) >			-> <del|)>

LOGIC_OP
    <LOP | > >			-> <lop|>>
    <LOP | >= >			-> <lop|>=>
    <LOP | < >			-> <lop|<>
    <LOP | <= >			-> <lop|<=>
    <LOP | = >			-> <lop|=>
    <LOP | <> >			-> <lop|<>>
    <LOP | e >			-> <lop|e>
    <LOP | ou >			-> <lop|ou>

ID
	<ID| %s>			-> <id>

